// Generated by Selenium IDE

import org.junit.*;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

@RunWith(Parameterized.class)
public class Se2022Test {
    private static WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @Parameterized.Parameter(0)
    public String sNumber;

    @Parameterized.Parameter(1)
    public String sName;

    @Parameterized.Parameters(name = "{index} <==> sNumber={0} sName={1}")
    public static List<String[]> getParameters() {
        List<String[]> list = new ArrayList<>();
        File inputFile = new File("user_info.csv");
        if (!inputFile.exists()) {
            System.out.println("error");
            System.exit(-1);
        }
        try {
            BufferedReader br = new BufferedReader(new InputStreamReader((new FileInputStream(inputFile)), "UTF-8"));
            String line = br.readLine();
            while ((line = br.readLine()) != null) {
                String[] tmp = line.split(",");
                if (tmp[0].equals("学号")) {
                    continue;
                }
                list.add(tmp);
            }
            br.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return list;
    }

    @BeforeClass
    public static void preparation(){
        driver = new ChromeDriver();
    }
    @Before
    public void setUp() {
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearBack() {
        driver.navigate().back();
        driver.navigate().refresh();
//        driver.quit();
    }

    @Test
    public void se2022() {
        driver.get("http://118.178.137.170:8080/");
        driver.manage().window().setSize(new Dimension(878, 816));
        driver.findElement(By.id("username")).sendKeys(this.sName);
        driver.findElement(By.cssSelector(".btn")).click();
        vars.put("sNumber", driver.findElement(By.cssSelector("td:nth-child(3)")).getText());
        assertEquals(this.sNumber, vars.get("sNumber"));
    }
}
